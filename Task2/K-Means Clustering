# Importing Libraries
library(factoextra)

#Iris Dataset
str(iris)

# iris.labels
iris.labels = iris$Species
table(iris.labels)

# Removing the Species column
iris_data <- scale(iris[, -5])
head(iris_data)

# Scale data
iris_data_scale <- scale(iris_data)
head(iris_data_scale)

# Distance
iris_data_dist <- dist(iris_data_scale)
print(iris_data_dist)

# Cluster Dendrogram with complete linkeage
hc.c<- hclust(iris_data_dist)
plot(hc.c)

# Calculate how many clusters you need using  Within Sum Squares
fviz_nbclust(iris_data_scale, kmeans, method = "wss")+
  labs(subtitle="Elbow Method")

# Kmeans
km.out <- kmeans(iris_data_scale, centers=3,nstart=100)
print(km.out)

# Visualize the clustering algorithm results.
km.clusters<-km.out$cluster
rownames(iris_data_scale)<-paste(iris$Species, 1:dim(iris)[1], sep = "_")
fviz_cluster(list(data=iris_data_scale, cluster = km.clusters))+theme_classic()
table(km.clusters, iris$Species)

#===============================================================================

# Scale the data
iris_data <- scale(iris[, -5])
head(iris_data) 

# Run k-means clustering algorithm
km.out <- kmeans(iris_data_scale, 3, nstart = 25)

# Visualize the clustering results
km.clusters <- km.out$cluster
fviz_cluster(list(data=iris_data_scale, cluster = km.clusters))



# Load required libraries
library(ggplot2)
library(cluster)
library(factoextra)

# Scale the iris data
iris_data_scale <- scale(iris[, -5])

# Perform K-means clustering
km.out <- kmeans(iris_data_scale, 3, iter.max = 10, nstart = 1)

# Extract cluster assignments
km.clusters <- km.out$cluster

# Visualize the clusters
fviz_cluster(list(data=iris_data_scale, cluster = km.clusters))+theme_classic()

# Display the cluster-species frequency table
table(km.clusters, iris$Species)

























































































































































